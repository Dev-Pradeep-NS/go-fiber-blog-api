version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile.prod}
    container_name: go-fiber-app
    ports:
      - "8000:8000"
    volumes:
      - air_data:/tmp
    depends_on:
      - postgres
    command: ["air", "-c", ".air.toml"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SERVER_HOST: ${SERVER_HOST}
      PORT: ${PORT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      POSTGRES_VERSION: ${POSTGRES_VERSION}
      DATABASE_URL: ${DATABASE_URL}
      BUCKET_NAME: ${BUCKET_NAME}
      FIREBASE_TYPE: ${FIREBASE_TYPE}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY_ID: ${FIREBASE_PRIVATE_KEY_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_CLIENT_ID: ${FIREBASE_CLIENT_ID}
      FIREBASE_AUTH_URI: ${FIREBASE_AUTH_URI}
      FIREBASE_TOKEN_URI: ${FIREBASE_TOKEN_URI}
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
      FIREBASE_CLIENT_X509_CERT_URL: ${FIREBASE_CLIENT_X509_CERT_URL}
      FIREBASE_UNIVERSE_DOMAIN: ${FIREBASE_UNIVERSE_DOMAIN}

  postgres:
    image: "postgres:latest"
    ports:
      - "54320:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  pgdata:
  air_data:
